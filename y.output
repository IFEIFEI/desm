Terminals unused in grammar

   SHIFT
   LSP
   RSP


State 21 conflicts: 1 shift/reduce


Grammar

    0 $accept: lang $end

    1 lang: inst DELIM lang
    2     | inst

    3 inst: OPCODE
    4     | OPCODE op_1
    5     | OPCODE op_1 SEP op_2
    6     | OPCODE op_1 SEP op_2 SEP op_3

    7 op_1: RE

    8 op_2: addr

    9 op_3: OP2

   10 addr: IMM
   11     | RE
   12     | LMP RE RMP
   13     | LMP RE SEP IMM RMP
   14     | LMP RE SEP IMM RMP CBP
   15     | LMP RE RMP SEP IMM
   16     | LMP RE SEP RE RMP
   17     | LBP RE CON RE RBP


Terminals, with rules where they appear

$end (0) 0
error (256)
OPCODE (258) 3 4 5 6
RE (259) 7 11 12 13 14 15 16 17
OP2 (260) 9
SHIFT (261)
SEP (262) 5 6 13 14 15 16
IMM (263) 10 13 14 15
LBP (264) 17
LMP (265) 12 13 14 15 16
LSP (266)
RBP (267) 17
RMP (268) 12 13 14 15 16
RSP (269)
CBP (270) 14
CON (271) 17
DELIM (272) 1


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
lang (19)
    on left: 1 2, on right: 0 1
inst (20)
    on left: 3 4 5 6, on right: 1 2
op_1 (21)
    on left: 7, on right: 4 5 6
op_2 (22)
    on left: 8, on right: 5 6
op_3 (23)
    on left: 9, on right: 6
addr (24)
    on left: 10 11 12 13 14 15 16 17, on right: 8


State 0

    0 $accept: . lang $end

    OPCODE  shift, and go to state 1

    lang  go to state 2
    inst  go to state 3


State 1

    3 inst: OPCODE .
    4     | OPCODE . op_1
    5     | OPCODE . op_1 SEP op_2
    6     | OPCODE . op_1 SEP op_2 SEP op_3

    RE  shift, and go to state 4

    $default  reduce using rule 3 (inst)

    op_1  go to state 5


State 2

    0 $accept: lang . $end

    $end  shift, and go to state 6


State 3

    1 lang: inst . DELIM lang
    2     | inst .

    DELIM  shift, and go to state 7

    $default  reduce using rule 2 (lang)


State 4

    7 op_1: RE .

    $default  reduce using rule 7 (op_1)


State 5

    4 inst: OPCODE op_1 .
    5     | OPCODE op_1 . SEP op_2
    6     | OPCODE op_1 . SEP op_2 SEP op_3

    SEP  shift, and go to state 8

    $default  reduce using rule 4 (inst)


State 6

    0 $accept: lang $end .

    $default  accept


State 7

    1 lang: inst DELIM . lang

    OPCODE  shift, and go to state 1

    lang  go to state 9
    inst  go to state 3


State 8

    5 inst: OPCODE op_1 SEP . op_2
    6     | OPCODE op_1 SEP . op_2 SEP op_3

    RE   shift, and go to state 10
    IMM  shift, and go to state 11
    LBP  shift, and go to state 12
    LMP  shift, and go to state 13

    op_2  go to state 14
    addr  go to state 15


State 9

    1 lang: inst DELIM lang .

    $default  reduce using rule 1 (lang)


State 10

   11 addr: RE .

    $default  reduce using rule 11 (addr)


State 11

   10 addr: IMM .

    $default  reduce using rule 10 (addr)


State 12

   17 addr: LBP . RE CON RE RBP

    RE  shift, and go to state 16


State 13

   12 addr: LMP . RE RMP
   13     | LMP . RE SEP IMM RMP
   14     | LMP . RE SEP IMM RMP CBP
   15     | LMP . RE RMP SEP IMM
   16     | LMP . RE SEP RE RMP

    RE  shift, and go to state 17


State 14

    5 inst: OPCODE op_1 SEP op_2 .
    6     | OPCODE op_1 SEP op_2 . SEP op_3

    SEP  shift, and go to state 18

    $default  reduce using rule 5 (inst)


State 15

    8 op_2: addr .

    $default  reduce using rule 8 (op_2)


State 16

   17 addr: LBP RE . CON RE RBP

    CON  shift, and go to state 19


State 17

   12 addr: LMP RE . RMP
   13     | LMP RE . SEP IMM RMP
   14     | LMP RE . SEP IMM RMP CBP
   15     | LMP RE . RMP SEP IMM
   16     | LMP RE . SEP RE RMP

    SEP  shift, and go to state 20
    RMP  shift, and go to state 21


State 18

    6 inst: OPCODE op_1 SEP op_2 SEP . op_3

    OP2  shift, and go to state 22

    op_3  go to state 23


State 19

   17 addr: LBP RE CON . RE RBP

    RE  shift, and go to state 24


State 20

   13 addr: LMP RE SEP . IMM RMP
   14     | LMP RE SEP . IMM RMP CBP
   16     | LMP RE SEP . RE RMP

    RE   shift, and go to state 25
    IMM  shift, and go to state 26


State 21

   12 addr: LMP RE RMP .
   15     | LMP RE RMP . SEP IMM

    SEP  shift, and go to state 27

    SEP       [reduce using rule 12 (addr)]
    $default  reduce using rule 12 (addr)


State 22

    9 op_3: OP2 .

    $default  reduce using rule 9 (op_3)


State 23

    6 inst: OPCODE op_1 SEP op_2 SEP op_3 .

    $default  reduce using rule 6 (inst)


State 24

   17 addr: LBP RE CON RE . RBP

    RBP  shift, and go to state 28


State 25

   16 addr: LMP RE SEP RE . RMP

    RMP  shift, and go to state 29


State 26

   13 addr: LMP RE SEP IMM . RMP
   14     | LMP RE SEP IMM . RMP CBP

    RMP  shift, and go to state 30


State 27

   15 addr: LMP RE RMP SEP . IMM

    IMM  shift, and go to state 31


State 28

   17 addr: LBP RE CON RE RBP .

    $default  reduce using rule 17 (addr)


State 29

   16 addr: LMP RE SEP RE RMP .

    $default  reduce using rule 16 (addr)


State 30

   13 addr: LMP RE SEP IMM RMP .
   14     | LMP RE SEP IMM RMP . CBP

    CBP  shift, and go to state 32

    $default  reduce using rule 13 (addr)


State 31

   15 addr: LMP RE RMP SEP IMM .

    $default  reduce using rule 15 (addr)


State 32

   14 addr: LMP RE SEP IMM RMP CBP .

    $default  reduce using rule 14 (addr)
