Terminals unused in grammar

   COND
   SUFFIX


Grammar

    0 $accept: lang $end

    1 lang: inst DELIM lang
    2     | inst

    3 inst: OPCODE
    4     | OPCODE op_1
    5     | OPCODE op_1 SEP op_2
    6     | OPCODE op_1 SEP op_2 SEP op_3

    7 op_1: RE

    8 op_2: RE

    9 op_3: OP2


Terminals, with rules where they appear

$end (0) 0
error (256)
OPCODE (258) 3 4 5 6
RE (259) 7 8
OP2 (260) 9
COND (261)
SUFFIX (262)
SEP (263) 5 6
DELIM (264) 1


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
lang (11)
    on left: 1 2, on right: 0 1
inst (12)
    on left: 3 4 5 6, on right: 1 2
op_1 (13)
    on left: 7, on right: 4 5 6
op_2 (14)
    on left: 8, on right: 5 6
op_3 (15)
    on left: 9, on right: 6


State 0

    0 $accept: . lang $end

    OPCODE  shift, and go to state 1

    lang  go to state 2
    inst  go to state 3


State 1

    3 inst: OPCODE .
    4     | OPCODE . op_1
    5     | OPCODE . op_1 SEP op_2
    6     | OPCODE . op_1 SEP op_2 SEP op_3

    RE  shift, and go to state 4

    $default  reduce using rule 3 (inst)

    op_1  go to state 5


State 2

    0 $accept: lang . $end

    $end  shift, and go to state 6


State 3

    1 lang: inst . DELIM lang
    2     | inst .

    DELIM  shift, and go to state 7

    $default  reduce using rule 2 (lang)


State 4

    7 op_1: RE .

    $default  reduce using rule 7 (op_1)


State 5

    4 inst: OPCODE op_1 .
    5     | OPCODE op_1 . SEP op_2
    6     | OPCODE op_1 . SEP op_2 SEP op_3

    SEP  shift, and go to state 8

    $default  reduce using rule 4 (inst)


State 6

    0 $accept: lang $end .

    $default  accept


State 7

    1 lang: inst DELIM . lang

    OPCODE  shift, and go to state 1

    lang  go to state 9
    inst  go to state 3


State 8

    5 inst: OPCODE op_1 SEP . op_2
    6     | OPCODE op_1 SEP . op_2 SEP op_3

    RE  shift, and go to state 10

    op_2  go to state 11


State 9

    1 lang: inst DELIM lang .

    $default  reduce using rule 1 (lang)


State 10

    8 op_2: RE .

    $default  reduce using rule 8 (op_2)


State 11

    5 inst: OPCODE op_1 SEP op_2 .
    6     | OPCODE op_1 SEP op_2 . SEP op_3

    SEP  shift, and go to state 12

    $default  reduce using rule 5 (inst)


State 12

    6 inst: OPCODE op_1 SEP op_2 SEP . op_3

    OP2  shift, and go to state 13

    op_3  go to state 14


State 13

    9 op_3: OP2 .

    $default  reduce using rule 9 (op_3)


State 14

    6 inst: OPCODE op_1 SEP op_2 SEP op_3 .

    $default  reduce using rule 6 (inst)
